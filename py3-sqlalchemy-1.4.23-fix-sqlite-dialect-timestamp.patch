diff --git a/lib/sqlalchemy/processors.py b/lib/sqlalchemy/processors.py
index 0c0aa1b..65a35fb 100644
--- a/lib/sqlalchemy/processors.py
+++ b/lib/sqlalchemy/processors.py
@@ -30,13 +30,16 @@ def str_to_datetime_processor_factory(regexp, type_):
         if value is None:
             return None
         else:
+            # in case we got an oracle timestamp:
+            if type(value) == type(1):
+                return datetime.datetime.fromtimestamp( float(value)/1000000000. ).strftime("%Y-%m-%d %H:%M:%S.%f")
             try:
                 m = rmatch(value)
             except TypeError as err:
                 util.raise_(
                     ValueError(
                         "Couldn't parse %s string '%r' "
-                        "- value is not a string." % (type_.__name__, value)
+                        "- value is not a string but %s." % (type_.__name__, value, type(value))
                     ),
                     from_=err,
                 )
diff --git a/setup.py b/setup.py
index 55a3cee..ab65667 100644
--- a/setup.py
+++ b/setup.py
@@ -29,11 +29,11 @@ else:
     extra_compile_args = []
 
 ext_modules = [
-    Extension(
-        "sqlalchemy.cprocessors",
-        sources=["lib/sqlalchemy/cextension/processors.c"],
-        extra_compile_args=extra_compile_args,
-    ),
+#    Extension(
+#        "sqlalchemy.cprocessors",
+#        sources=["lib/sqlalchemy/cextension/processors.c"],
+#        extra_compile_args=extra_compile_args,
+#    ),
     Extension(
         "sqlalchemy.cresultproxy",
         sources=["lib/sqlalchemy/cextension/resultproxy.c"],
